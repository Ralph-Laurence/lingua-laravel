//if (confirm("Do you want to hire this ASL tutor? You can end the contract anytime.

var lastStarRating  = 0;
var reviewTextarea  = undefined;
var reviewMaxLength = undefined;
var reviewCharCtr   = undefined;

$(document).ready(function()
{
    reviewTextarea  = $('#input-review-comment');
    reviewMaxLength = reviewTextarea.attr('maxlength') || 120;
    reviewCharCtr   = $('#review-char-counter');
    lastStarRating  = $('#rating').val() || 0;

    $('.btn-hire-tutor').on('click', function()
    {
        let form      = $('#frm-hire-tutor');
        let firstname = DOMPurify.sanitize($('#tutor_name').val());
        let prompt    = `Would you like to hire <strong>${firstname}</strong> as your ASL tutor?<br><br>You can end the contract anytime.`;

        ConfirmBox.show(prompt, 'Hire Tutor',
        {
            onOK: () => form.submit()
        })
    });

    $('.btn-end-tutor').on('click', function()
    {
        let form      = $('#frm-end-contract');
        let firstname = DOMPurify.sanitize($('#tutor_name').val());
        let prompt    = `Would you like to end the tutorial contract with <strong>${firstname}</strong>?<br><br>You can hire ${firstname} again anytime.`;

        ConfirmBox.show(prompt, 'Leave Tutor',
        {
            onOK: () => form.submit()
        })
    });

    $('.btn-cancel-hire-req').on('click', function()
    {
        let form      = $('#frm-cancel-hire');
        let firstname = DOMPurify.sanitize(form.find('#tutor_name').val());
        let prompt    = `Would you like to cancel your hire request with <strong>${firstname}</strong>?`;

        ConfirmBox.show(prompt, 'Cancel Hire',
        {
            onOK: () => form.submit()
        })
    });

    $('.star-rating-control').on('click', function()
    {
        var selectedRating = $(this).data('rating');
        lastStarRating = selectedRating;
        $('#rating').val(selectedRating);

        fillStars(selectedRating);
    })
    .on('mouseover', function()
    {
        var targetRating = $(this).data('rating');

        $('.star-rating-control').removeClass('filled hover');
        $('.star-rating-control').each(function()
        {
            if ($(this).data('rating') <= targetRating)
            {
                $(this).addClass('hover');
            }
        });
    });

    $('.star-rating-wrapper').on('mouseleave', function()
    {
        fillStars(lastStarRating);
    });

    // From utils.js
    initializeBsTooltips();

    // Display the max allowed length of review textarea
    updateCharLengthCounter();

    reviewTextarea.on('input', () => updateCharLengthCounter());
});

function fillStars(selectedRating)
{
    $('.star-rating-control').removeClass('filled hover');
    $('.star-rating-control').each(function()
    {
        if ($(this).data('rating') <= selectedRating)
        {
            $(this).addClass('filled');
        }
    });
}

function updateCharLengthCounter()
{
    let currentLength = reviewTextarea.val().length;
    reviewCharCtr.text(`${currentLength}/${reviewMaxLength}`);
}
